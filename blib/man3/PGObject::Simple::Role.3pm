.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PGObject::Simple::Role 3"
.TH PGObject::Simple::Role 3 "2013-11-05" "perl v5.14.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PGObject::Simple::Role \- Moo/Moose mappers for minimalist PGObject framework
.SH "VERSION"
.IX Header "VERSION"
Version 0.11
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Take the following (Moose) class:
.PP
.Vb 3
\&    package MyAPP::Foo;
\&    use Moose;
\&    with \*(AqPGObject::Simple::Role\*(Aq;
\&
\&    has id  => (is => \*(Aqro\*(Aq, isa => \*(AqInt\*(Aq, required => 0);
\&    has foo => (is => \*(Aqro\*(Aq, isa => \*(AqStr\*(Aq, required => 0);
\&    has bar => (is => \*(Aqro\*(Aq, isa => \*(AqStr\*(Aq, required => 0);
\&    has baz => (is => \*(Aqro\*(Aq, isa => \*(AqInt\*(Aq, required => 0);
\&
\&    sub get_dbh {
\&        return DBI\->connect(\*(Aqdbi:Pg:dbname=foobar\*(Aq);
\&    }
.Ve
.PP
And a stored procedure:
.PP
.Vb 6
\&    CREATE OR REPLACE FUNCTION foo_to_int
\&    (in_id int, in_foo text, in_bar text, in_baz int)
\&    RETURNS INT LANGUAGE SQL AS
\&    $$
\&    select char_length($2) + char_length($3) + $1 * $4;
\&    $$;
.Ve
.PP
Then the following Perl code would work to invoke it:
.PP
.Vb 2
\&    my $foobar = MyApp\->foo(id => 3, foo => \*(Aqfoo\*(Aq, bar => \*(Aqbaz\*(Aq, baz => 33);
\&    $foobar\->call_dbmethod(funcname => \*(Aqfoo_to_int\*(Aq);
.Ve
.PP
The full interface of call_dbmethod and call_procedure from PGObject::Simple are
supported.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "ATTRIBUTES AND LAZY GETTERS"
.IX Header "ATTRIBUTES AND LAZY GETTERS"
.SH "_get_prefix"
.IX Header "_get_prefix"
Returns string, default is an empty string, used to set a prefix for mapping
stored prcedures to an object class.
.SS "_get_dbh"
.IX Subsection "_get_dbh"
Subclasses or sub-roles \s-1MUST\s0 implement a function which returns a \s-1DBI\s0 database
handle (DBD::Pg 2.0 or hgher required).  If this is not overridden an exception
will be raised.
.SS "call_procedure"
.IX Subsection "call_procedure"
Identical interface to PGObject::Simple\->call_procedure.
.PP
This can be used on objects or on the packages themselves.  I.e.  
mypackage\->\fIcall_procedure()\fR and \f(CW$myobject\fR\->\fIcall_procedure()\fR both work.
.SS "call_dbmethod"
.IX Subsection "call_dbmethod"
Identical interface to PGObject::Simple\->call_dbmethod
.PP
This can be used on objects or on the packages themselves.  I.e.  
mypackage\->\fIcall_dbmethod()\fR and \f(CW$myobject\fR\->\fIcall_dbmethod()\fR both work.
.SS "has_dbmethod (\s-1EXPERIMENTAL\s0)"
.IX Subsection "has_dbmethod (EXPERIMENTAL)"
use as _\|_PACKAGE_\|_\->has_dbmethod (name => (default_arghash))
.PP
For example:
.PP
.Vb 10
\&  package MyObject;
\&  use Moo;
\&  with \*(AqPGObject::Simple::Role\*(Aq;
\&  _\|_PACKAGE_\|_\->has_dbmethod(save => (
\&                                 strict_args => 0,
\&                                    funcname => \*(Aqsave_user\*(Aq, 
\&                                      schema => \*(Aqpublic\*(Aq,
\&                                        args => { admin => 0 },
\&  );
\&  $MyObject\->save(args => {username => \*(Aqfoo\*(Aq, password => \*(Aqbar\*(Aq});
.Ve
.PP
I would like to change this so I can autodetect the package like Moo does with
\&\fIhas()\fR.  However not sure how to do this yet.
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Travers,, \f(CW\*(C`<chris.travers at gmail.com>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-pgobject\-simple\-role at rt.cpan.org\*(C'\fR, or through
the web interface at http://rt.cpan.org/NoAuth/ReportBug.html?Queue=PGObject\-Simple\-Role <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=PGObject-Simple-Role>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc PGObject::Simple::Role
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker (report bugs here)
.Sp
http://rt.cpan.org/NoAuth/Bugs.html?Dist=PGObject\-Simple\-Role <http://rt.cpan.org/NoAuth/Bugs.html?Dist=PGObject-Simple-Role>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
http://annocpan.org/dist/PGObject\-Simple\-Role <http://annocpan.org/dist/PGObject-Simple-Role>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
http://cpanratings.perl.org/d/PGObject\-Simple\-Role <http://cpanratings.perl.org/d/PGObject-Simple-Role>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
http://search.cpan.org/dist/PGObject\-Simple\-Role/ <http://search.cpan.org/dist/PGObject-Simple-Role/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Chris Travers,.
.PP
Redistribution and use in source and compiled forms with or without 
modification, are permitted provided that the following conditions are met:
.IP "\(bu" 4
Redistributions of source code must retain the above
copyright notice, this list of conditions and the following disclaimer as the
first lines of this file unmodified.
.IP "\(bu" 4
Redistributions in compiled form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
source code, documentation, and/or other materials provided with the 
distribution.
.PP
\&\s-1THIS\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \s-1BY\s0 \s-1THE\s0 \s-1AUTHOR\s0(S) \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1AND\s0
\&\s-1ANY\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0, \s-1INCLUDING\s0, \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0, \s-1THE\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0 \s-1ARE\s0
\&\s-1DISCLAIMED\s0. \s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1SHALL\s0 \s-1THE\s0 \s-1AUTHOR\s0(S) \s-1BE\s0 \s-1LIABLE\s0 \s-1FOR\s0
\&\s-1ANY\s0 \s-1DIRECT\s0, \s-1INDIRECT\s0, \s-1INCIDENTAL\s0, \s-1SPECIAL\s0, \s-1EXEMPLARY\s0, \s-1OR\s0 \s-1CONSEQUENTIAL\s0 \s-1DAMAGES\s0
(\s-1INCLUDING\s0, \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0, \s-1PROCUREMENT\s0 \s-1OF\s0 \s-1SUBSTITUTE\s0 \s-1GOODS\s0 \s-1OR\s0 \s-1SERVICES\s0;
\&\s-1LOSS\s0 \s-1OF\s0 \s-1USE\s0, \s-1DATA\s0, \s-1OR\s0 \s-1PROFITS\s0; \s-1OR\s0 \s-1BUSINESS\s0 \s-1INTERRUPTION\s0) \s-1HOWEVER\s0 \s-1CAUSED\s0 \s-1AND\s0 \s-1ON\s0
\&\s-1ANY\s0 \s-1THEORY\s0 \s-1OF\s0 \s-1LIABILITY\s0, \s-1WHETHER\s0 \s-1IN\s0 \s-1CONTRACT\s0, \s-1STRICT\s0 \s-1LIABILITY\s0, \s-1OR\s0 \s-1TORT\s0
(\s-1INCLUDING\s0 \s-1NEGLIGENCE\s0 \s-1OR\s0 \s-1OTHERWISE\s0) \s-1ARISING\s0 \s-1IN\s0 \s-1ANY\s0 \s-1WAY\s0 \s-1OUT\s0 \s-1OF\s0 \s-1THE\s0 \s-1USE\s0 \s-1OF\s0 \s-1THIS\s0
\&\s-1SOFTWARE\s0, \s-1EVEN\s0 \s-1IF\s0 \s-1ADVISED\s0 \s-1OF\s0 \s-1THE\s0 \s-1POSSIBILITY\s0 \s-1OF\s0 \s-1SUCH\s0 \s-1DAMAGE\s0.
